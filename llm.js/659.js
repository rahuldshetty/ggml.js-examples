import*as e from"./wasm/replit.js";var t={d:(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const a=(o={default:()=>e.default},n={},t.d(n,o),n);var o,n;const s=[/main:.*/,/.*_model_load:.*/];let l;const r=e=>{console.log("model:"+e),(e=>{for(var t=0;t<s.length;t+=1)if(s[t].test(e))return!1;return!0})(e)&&postMessage({event:3,line:e})};self.addEventListener("message",(e=>{switch(e.data.event){case 0:(async e=>{const t={noInitialRun:!0,print:r};l=await(0,a.default)(t),async function(e,t){let a=null,o=self;if(void 0===o)console.log("Oops, `window` is not defined");else if(o&&o.caches){a=await o.caches.open("llm.js-cache");const n=await a.match(e);if(n){const e=await n.arrayBuffer(),a=new Uint8Array(e);return void t(a)}}const n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=async o=>{const s=n.response;if(s){const o=new Uint8Array(s);a&&await a.put(e,new Response(s)),t(o)}},n.send(null)}(e,(e=>{l.FS_createPath("/","models",!0,!0),l.FS_createDataFile("/models","model.bin",e,!0,!0,!0),postMessage({event:1}),console.log("model: Loaded")}))})(e.data.url);break;case 2:((e,t,a,o,n,s,r,d)=>{console.log(t);const i=["-p",e.toString(),"-n",a.toString(),"--top_k",o.toString(),"--top_p",n.toString(),"--temp",s.toString(),"-m","/models/model.bin"];console.log("model: calling main..."),l.callMain(i),postMessage({event:4}),console.log("model: Completed")})(e.data.prompt,e.data.seed,e.data.max_token_len,e.data.top_k,e.data.top_p,e.data.temp,e.data.repeat_last_n,e.data.repeat_penalty)}}),!1);